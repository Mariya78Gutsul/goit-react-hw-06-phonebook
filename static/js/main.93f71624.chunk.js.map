{"version":3,"sources":["components/ContactList/ContactList.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contactsSelector.js","components/App.jsx","components/LocalStorage/LocalStorage.jsx","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","getContacts","items","createReducer","actions","state","some","c","alert","filter","combineReducers","todosPersistConfig","key","storage","blacklist","persReducer","persistReducer","contactsReducer","store","configureStore","reducer","contacts","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ContactList","onRemoveContact","className","s","list","map","contact","item","type","onClick","Filter","onChangeFilter","value","onChange","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","preventDefault","label","input","button","getFilter","getContactsFiltered","normalizedFilter","toLowerCase","includes","App","dispatch","useDispatch","useSelector","useEffect","localStorage","setItem","JSON","stringify","error","contactsActions","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.93f71624.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1jgos\",\"item\":\"ContactList_item__1JCg4\",\"TaskList_text\":\"ContactList_TaskList_text__210ML\",\"button\":\"ContactList_button__PuGpI\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"nanoid\";\r\nconst addContact = createAction(\"contact/add\", (name, number) => ({\r\n  payload: {\r\n    id: nanoid(3),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contact/delete\");\r\n\r\nconst changeFilter = createAction(\"contact/changeFilter\");\r\n\r\nconst getContacts = createAction(\"contact/get\");\r\n\r\nexport default { addContact, deleteContact, changeFilter, getContacts };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contactsActions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    const dublicate = state.some((c) => c.name === payload.name);\r\n    if (dublicate) {\r\n      return alert(`${payload.name} is already in contacts.`);\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst todosPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst persReducer = persistReducer(todosPersistConfig, contactsReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => (\n        <li className={s.item} key={contact.id}>\n          <p>\n            {contact.name}: {contact.number}\n          </p>\n          <button type=\"button\" onClick={() => onRemoveContact(contact.id)}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ filter, onChangeFilter }) {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={s.list} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getContactsFiltered = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport contactsActions from \"../redux/contacts/contactsActions\";\nimport {\n  getContactsFiltered,\n  getFilter,\n} from \"../redux/contacts/contactsSelector\";\nimport * as storage from \"./LocalStorage/LocalStorage\";\n\nconst STORAGE_KEY = \"contacts\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContactsFiltered);\n\n  useEffect(() => {\n    storage.set(STORAGE_KEY, contacts);\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    dispatch(contactsActions.addContact(name, number));\n  };\n\n  const changeFilter = (e) => {\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\n    // setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n\n  const deleteContact = (id) => {\n    dispatch(contactsActions.deleteContact(id));\n    // setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n\n      <Filter filter={filter} onChangeFilter={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onRemoveContact={deleteContact}\n      />\n    </div>\n  );\n}\n","const set = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = (key) => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = (key) => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, set, remove };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={\"Loading...\"} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactForm_list__1P5zC\",\"label\":\"ContactForm_label__2nq8Q\",\"input\":\"ContactForm_input__3xWEX\",\"button\":\"ContactForm_button__1XA3s\"};"],"sourceRoot":""}